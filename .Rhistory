ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a")) +
geom_line(aes(y = Q_seller, color = "b")) +
geom_line(aes(y = Q_joint, color = "c")) +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("P(Buy)", "P(Sell)", "P(Transaction)")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.05),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_text(size = 10, color = "black"),
axis.text.y       = element_text(size = 10, color = "black"),
axis.title        = element_text(size = 12),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(.5, "cm"),
plot.margin       = unit(c(.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
price_ranges = c(.01, 1000)
buyer_seller_demand = data.frame(agent = c("buyer", "seller"),
baseline = c(.00025, .0025)) %>%
mutate(increase = baseline - .75*baseline,
decrease = baseline + 5*baseline) %>%
pivot_longer(c("baseline", "increase", "decrease"),
names_to = "condition", values_to = "alpha") %>%
group_by(agent, condition, alpha) %>%
reframe(price = 10^(seq(log10(price_ranges[1]), log10(price_ranges[2]), length.out = 100))) %>%
mutate(Q = case_when(agent == "buyer" ~ calculate_QB(price, alpha_B = alpha),
agent == "seller" ~ calculate_QS(price, alpha_S = alpha)),
logQ = log10(Q),
price = price,
log_price = log10(price)) %>%
pivot_wider(names_from = "agent", values_from = c("alpha", "logQ", "Q")) %>%
mutate(Q_joint = Q_buyer*Q_seller/100)
jpeg(here("Plots", "Figure 2 (Shaded) - Paneled Demand Curve.jpeg"),
width = 14.6, height = 10, units = "cm", res = 300)
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a")) +
geom_line(aes(y = Q_seller, color = "b")) +
geom_ribbon(aes(ymin = 0, ymax = Q_joint, color = "c"), alpha = .25) +
geom_line(aes(y = Q_joint), linewidth = .25) +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "black"),
labels = c("P(Buy)", "P(Sell)", "P(Transaction)")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.05),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_text(size = 10, color = "black"),
axis.text.y       = element_text(size = 10, color = "black"),
axis.title        = element_text(size = 12),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(.5, "cm"),
plot.margin       = unit(c(.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
# install.packages("rmarkdown")
# install.packages("tidyverse")
# install.packages("devtools")
# install.packages("here")
# install.packages("lemon")
# devtools::install_github("https://github.com/correadarosaj/Economon")
library(tidyverse)
library(here)
library(Economon)
library(lemon)
price_ranges = c(.01, 1000)
buyer_seller_demand = data.frame(agent = c("buyer", "seller"),
baseline = c(.00025, .0025)) %>%
mutate(increase = baseline - .75*baseline,
decrease = baseline + 5*baseline) %>%
pivot_longer(c("baseline", "increase", "decrease"),
names_to = "condition", values_to = "alpha") %>%
group_by(agent, condition, alpha) %>%
reframe(price = 10^(seq(log10(price_ranges[1]), log10(price_ranges[2]), length.out = 100))) %>%
mutate(Q = case_when(agent == "buyer" ~ calculate_QB(price, alpha_B = alpha),
agent == "seller" ~ calculate_QS(price, alpha_S = alpha)),
logQ = log10(Q),
price = price,
log_price = log10(price)) %>%
pivot_wider(names_from = "agent", values_from = c("alpha", "logQ", "Q")) %>%
mutate(Q_joint = Q_buyer*Q_seller/100)
jpeg(here("Plots", "Figure 1b - Buyer Demand Curve.jpeg"),
width = 5.5, height = 4, units = "cm", res = 300)
buyer_seller_demand %>%
filter(condition == "baseline") %>%
ggplot(aes(x = log_price, y = Q_buyer)) +
# ADD GEOMS
geom_line() +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "P(Buy)") +
theme_classic() +
theme(axis.text.x = element_text(size = 10, color = "black"),
axis.text.y = element_text(size = 10, color = "black"),
axis.title  = element_text(size = 12),
plot.margin = unit(c(.2, .1, .05, .05), "cm")) +
coord_cartesian(clip = "off")
dev.off()
jpeg(here("Plots", "Figure 1c - Seller Demand Curve.jpeg"),
width = 5.5, height = 4, units = "cm", res = 300)
buyer_seller_demand %>%
filter(condition == "baseline") %>%
ggplot(aes(x = log_price, y = Q_seller)) +
# ADD GEOMS
geom_line(color = "gray55") +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "P(Sell)") +
theme_classic() +
theme(axis.text.x = element_text(size = 10, color = "black"),
axis.text.y = element_text(size = 10, color = "black"),
axis.title  = element_text(size = 12),
plot.margin = unit(c(.2, .1, .05, .05), "cm")) +
coord_cartesian(clip = "off")
dev.off()
jpeg(here("Plots", "Figure 1d (Shaded) - Combined Demand Curve.jpeg"),
width = 8, height = 4, units = "cm", res = 300)
buyer_seller_demand %>%
filter(condition == "baseline") %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a")) +
geom_line(aes(y = Q_seller, color = "b")) +
geom_ribbon(aes(ymin = 0, ymax = Q_joint, color = "c"), alpha = .25) +
geom_line(aes(y = Q_joint), linewidth = .25) +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "black"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.99, .645),
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_text(size = 10, color = "black"),
axis.text.y       = element_text(size = 10, color = "black"),
axis.title        = element_text(size = 12),
plot.margin       = unit(c(.2, 1.5, .05, .05), "cm")) +
coord_cartesian(clip = "off")
dev.off()
jpeg(here("Plots", "Figure 1d (Line) - Combined Demand Curve.jpeg"),
width = 8, height = 4, units = "cm", res = 300)
buyer_seller_demand %>%
filter(condition == "baseline") %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a")) +
geom_line(aes(y = Q_seller, color = "b")) +
geom_line(aes(y = Q_joint, color = "c")) +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.99, .645),
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_text(size = 10, color = "black"),
axis.text.y       = element_text(size = 10, color = "black"),
axis.title        = element_text(size = 12),
plot.margin       = unit(c(.2, 1.5, .05, .05), "cm")) +
coord_cartesian(clip = "off")
dev.off()
jpeg(here("Plots", "Figure 2 (Line) - Paneled Demand Curve.jpeg"),
width = 14.6, height = 10, units = "cm", res = 300)
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a")) +
geom_line(aes(y = Q_seller, color = "b")) +
geom_line(aes(y = Q_joint, color = "c")) +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.05),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_text(size = 10, color = "black"),
axis.text.y       = element_text(size = 10, color = "black"),
axis.title        = element_text(size = 12),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(.5, "cm"),
plot.margin       = unit(c(.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
jpeg(here("Plots", "Figure 2 (Shaded) - Paneled Demand Curve.jpeg"),
width = 14.6, height = 10, units = "cm", res = 300)
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a")) +
geom_line(aes(y = Q_seller, color = "b")) +
geom_ribbon(aes(ymin = 0, ymax = Q_joint, color = "c"), alpha = .25) +
geom_line(aes(y = Q_joint), linewidth = .25) +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "black"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.05),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_text(size = 10, color = "black"),
axis.text.y       = element_text(size = 10, color = "black"),
axis.title        = element_text(size = 12),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(.5, "cm"),
plot.margin       = unit(c(.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
# install.packages("rmarkdown")
# install.packages("tidyverse")
# install.packages("devtools")
# install.packages("here")
# install.packages("lemon")
# devtools::install_github("https://github.com/correadarosaj/Economon")
library(tidyverse)
library(here)
library(Economon)
library(lemon)
price_ranges = c(.01, 1000)
buyer_seller_demand = data.frame(agent = c("buyer", "seller"),
baseline = c(.00025, .0025)) %>%
mutate(increase = baseline - .75*baseline,
decrease = baseline + 5*baseline) %>%
pivot_longer(c("baseline", "increase", "decrease"),
names_to = "condition", values_to = "alpha") %>%
group_by(agent, condition, alpha) %>%
reframe(price = 10^(seq(log10(price_ranges[1]), log10(price_ranges[2]), length.out = 100))) %>%
mutate(Q = case_when(agent == "buyer" ~ calculate_QB(price, alpha_B = alpha),
agent == "seller" ~ calculate_QS(price, alpha_S = alpha)),
logQ = log10(Q),
price = price,
log_price = log10(price)) %>%
pivot_wider(names_from = "agent", values_from = c("alpha", "logQ", "Q")) %>%
mutate(Q_joint = Q_buyer*Q_seller/100)
jpeg(here("Plots", "Figure 1b - Buyer Demand Curve.jpeg"),
width = 5.5, height = 4, units = "cm", res = 300)
buyer_seller_demand %>%
filter(condition == "baseline") %>%
ggplot(aes(x = log_price, y = Q_buyer)) +
# ADD GEOMS
geom_line() +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "P(Buy)") +
theme_classic() +
theme(axis.text.x = element_text(size = 10, color = "black"),
axis.text.y = element_text(size = 10, color = "black"),
axis.title  = element_text(size = 12),
plot.margin = unit(c(.2, .1, .05, .05), "cm")) +
coord_cartesian(clip = "off")
dev.off()
jpeg(here("Plots", "Figure 1c - Seller Demand Curve.jpeg"),
width = 5.5, height = 4, units = "cm", res = 300)
buyer_seller_demand %>%
filter(condition == "baseline") %>%
ggplot(aes(x = log_price, y = Q_seller)) +
# ADD GEOMS
geom_line(color = "gray55") +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "P(Sell)") +
theme_classic() +
theme(axis.text.x = element_text(size = 10, color = "black"),
axis.text.y = element_text(size = 10, color = "black"),
axis.title  = element_text(size = 12),
plot.margin = unit(c(.2, .1, .05, .05), "cm")) +
coord_cartesian(clip = "off")
dev.off()
jpeg(here("Plots", "Figure 1d (Shaded) - Combined Demand Curve.jpeg"),
width = 8, height = 4, units = "cm", res = 300)
buyer_seller_demand %>%
filter(condition == "baseline") %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a")) +
geom_line(aes(y = Q_seller, color = "b")) +
geom_ribbon(aes(ymin = 0, ymax = Q_joint, color = "c"), alpha = .25) +
geom_line(aes(y = Q_joint), linewidth = .25) +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "black"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.99, .63),
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_text(size = 10, color = "black"),
axis.text.y       = element_text(size = 10, color = "black"),
axis.title        = element_text(size = 12),
plot.margin       = unit(c(.2, 1.5, .05, .05), "cm")) +
coord_cartesian(clip = "off")
dev.off()
jpeg(here("Plots", "Figure 1d (Line) - Combined Demand Curve.jpeg"),
width = 8, height = 4, units = "cm", res = 300)
buyer_seller_demand %>%
filter(condition == "baseline") %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a")) +
geom_line(aes(y = Q_seller, color = "b")) +
geom_line(aes(y = Q_joint, color = "c")) +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.99, .63),
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_text(size = 10, color = "black"),
axis.text.y       = element_text(size = 10, color = "black"),
axis.title        = element_text(size = 12),
plot.margin       = unit(c(.2, 1.5, .05, .05), "cm")) +
coord_cartesian(clip = "off")
dev.off()
jpeg(here("Plots", "Figure 2 (Line) - Paneled Demand Curve.jpeg"),
width = 14.6, height = 10, units = "cm", res = 300)
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a")) +
geom_line(aes(y = Q_seller, color = "b")) +
geom_line(aes(y = Q_joint, color = "c")) +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.05),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_text(size = 10, color = "black"),
axis.text.y       = element_text(size = 10, color = "black"),
axis.title        = element_text(size = 12),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(.5, "cm"),
plot.margin       = unit(c(.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
jpeg(here("Plots", "Figure 2 (Shaded) - Paneled Demand Curve.jpeg"),
width = 14.6, height = 10, units = "cm", res = 300)
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a")) +
geom_line(aes(y = Q_seller, color = "b")) +
geom_ribbon(aes(ymin = 0, ymax = Q_joint, color = "c"), alpha = .25) +
geom_line(aes(y = Q_joint), linewidth = .25) +
geom_vline(xintercept = log10(calculate_price(.0025)), linetype = "dotted") +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.25, 4, 64)),
labels = c("$.25", "$4", "$64")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "black"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.05),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_text(size = 10, color = "black"),
axis.text.y       = element_text(size = 10, color = "black"),
axis.title        = element_text(size = 12),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(.5, "cm"),
plot.margin       = unit(c(.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
