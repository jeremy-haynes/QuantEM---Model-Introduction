scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.125),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_blank(),
axis.text.y       = element_text(size = 10, color = "black"),
axis.line         = element_line(linewidth = .75),
axis.ticks        = element_line(linewidth = .75, color = "black"),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(1, "cm"),
plot.margin       = unit(c(1.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
View(baseline)
baseline = bind_rows(mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "decrease", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "decrease", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "increase", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "increase", column = "Seller", Q_buyer = NA, Q_joint = NA))
# baseline = bind_rows(mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "decrease", column = "Buyer", Q_seller = NA, Q_joint = NA),
#                      mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "decrease", column = "Seller", Q_buyer = NA, Q_joint = NA),
#                      mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "increase", column = "Buyer", Q_seller = NA, Q_joint = NA),
#                      mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "increase", column = "Seller", Q_buyer = NA, Q_joint = NA))
jpeg(here("Plots", "Figure 2 - Paneled Demand Curve.jpeg"),
width = 14.6, height = 12, units = "cm", res = 300)
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
mutate(x_int = case_when(column == "Buyer" ~ NA, T ~ log10(calculate_price(seller_alpha)))) %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "solid") +
geom_line(aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "solid") +
geom_line(aes(y = Q_joint, color = "c"), linewidth = .75, linetype = "solid") +
geom_line(data = baseline, aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "dashed") +
geom_line(data = baseline, aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "dashed") +
geom_vline(aes(xintercept = x_int),
linetype = "dotted", linewidth = .75) +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.10, 5, 250)),
labels = c("$.10", "$5", "$250")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.125),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_blank(),
axis.text.y       = element_text(size = 10, color = "black"),
axis.line         = element_line(linewidth = .75),
axis.ticks        = element_line(linewidth = .75, color = "black"),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(1, "cm"),
plot.margin       = unit(c(1.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
baseline = bind_rows(mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "decrease", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "decrease", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "increase", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "increase", column = "Seller", Q_buyer = NA, Q_joint = NA))
# baseline = bind_rows(mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "decrease", column = "Buyer", Q_seller = NA, Q_joint = NA),
#                      mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "decrease", column = "Seller", Q_buyer = NA, Q_joint = NA),
#                      mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "increase", column = "Buyer", Q_seller = NA, Q_joint = NA),
#                      mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "increase", column = "Seller", Q_buyer = NA, Q_joint = NA))
jpeg(here("Plots", "Figure 2 - Paneled Demand Curve.jpeg"),
width = 14.6, height = 12, units = "cm", res = 300)
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
mutate(x_int = case_when(column == "Buyer" ~ NA, T ~ log10(calculate_price(alpha_seller)))) %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "solid") +
geom_line(aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "solid") +
geom_line(aes(y = Q_joint, color = "c"), linewidth = .75, linetype = "solid") +
geom_line(data = baseline, aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "dashed") +
geom_line(data = baseline, aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "dashed") +
geom_vline(aes(xintercept = x_int),
linetype = "dotted", linewidth = .75) +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.10, 5, 250)),
labels = c("$.10", "$5", "$250")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.125),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_blank(),
axis.text.y       = element_text(size = 10, color = "black"),
axis.line         = element_line(linewidth = .75),
axis.ticks        = element_line(linewidth = .75, color = "black"),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(1, "cm"),
plot.margin       = unit(c(1.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%View()
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
mutate(x_int = case_when(column == "Buyer" ~ NA, T ~ log10(calculate_price(alpha_seller)))) %>% View()
unique(buyer_seller_demand$alpha_seller)
baseline = bind_rows(mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "decrease", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "decrease", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "increase", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "increase", column = "Seller", Q_buyer = NA, Q_joint = NA))
# baseline = bind_rows(mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "decrease", column = "Buyer", Q_seller = NA, Q_joint = NA),
#                      mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "decrease", column = "Seller", Q_buyer = NA, Q_joint = NA),
#                      mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "increase", column = "Buyer", Q_seller = NA, Q_joint = NA),
#                      mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "increase", column = "Seller", Q_buyer = NA, Q_joint = NA))
jpeg(here("Plots", "Figure 2 - Paneled Demand Curve.jpeg"),
width = 14.6, height = 12, units = "cm", res = 300)
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
mutate(x_int = case_when(condition == "baseline" ~ log10(calculate_price(.0025)),
condition == "increase" ~ log10(calculate_price(.000375)),
condition == "decrease" ~ log10(calculate_price(.015)),
column == "Buyer" ~ NA)) %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "solid") +
geom_line(aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "solid") +
geom_line(aes(y = Q_joint, color = "c"), linewidth = .75, linetype = "solid") +
geom_line(data = baseline, aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "dashed") +
geom_line(data = baseline, aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "dashed") +
geom_vline(aes(xintercept = x_int),
linetype = "dotted", linewidth = .75) +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.10, 5, 250)),
labels = c("$.10", "$5", "$250")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.125),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_blank(),
axis.text.y       = element_text(size = 10, color = "black"),
axis.line         = element_line(linewidth = .75),
axis.ticks        = element_line(linewidth = .75, color = "black"),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(1, "cm"),
plot.margin       = unit(c(1.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
mutate(x_int = case_when(condition == "baseline" ~ log10(calculate_price(.0025)),
condition == "increase" ~ log10(calculate_price(.000375)),
condition == "decrease" ~ log10(calculate_price(.015)),
column == "Buyer" ~ NA)) %>%  View()
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
mutate(x_int = case_when(condition == "baseline" ~ log10(calculate_price(.0025)),
condition == "increase" ~ log10(calculate_price(.000375)),
condition == "decrease" ~ log10(calculate_price(.015))),
x_int = case_when(column == "Buyer" ~ NA, T ~ x_int)) %>%  View()
baseline = bind_rows(mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "decrease", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "decrease", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "increase", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(filter(buyer_seller_demand, condition == "baseline"),
condition = "increase", column = "Seller", Q_buyer = NA, Q_joint = NA))
# baseline = bind_rows(mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "decrease", column = "Buyer", Q_seller = NA, Q_joint = NA),
#                      mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "decrease", column = "Seller", Q_buyer = NA, Q_joint = NA),
#                      mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "increase", column = "Buyer", Q_seller = NA, Q_joint = NA),
#                      mutate(filter(buyer_seller_demand, condition == "baseline"),
#                             condition = "increase", column = "Seller", Q_buyer = NA, Q_joint = NA))
jpeg(here("Plots", "Figure 2 - Paneled Demand Curve.jpeg"),
width = 14.6, height = 12, units = "cm", res = 300)
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
mutate(x_int = case_when(condition == "baseline" ~ log10(calculate_price(.0025)),
condition == "increase" ~ log10(calculate_price(.000375)),
condition == "decrease" ~ log10(calculate_price(.015))),
x_int = case_when(column == "Buyer" ~ NA, T ~ x_int)) %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "solid") +
geom_line(aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "solid") +
geom_line(aes(y = Q_joint, color = "c"), linewidth = .75, linetype = "solid") +
geom_line(data = baseline, aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "dashed") +
geom_line(data = baseline, aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "dashed") +
geom_vline(aes(xintercept = x_int),
linetype = "dotted", linewidth = .75) +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.10, 5, 250)),
labels = c("$.10", "$5", "$250")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.125),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_blank(),
axis.text.y       = element_text(size = 10, color = "black"),
axis.line         = element_line(linewidth = .75),
axis.ticks        = element_line(linewidth = .75, color = "black"),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(1, "cm"),
plot.margin       = unit(c(1.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
# FOR SHOWING CHANGES FROM BASELINE AS DASHED LINES IN 2ND AND 3RD ROWS
baseline = filter(buyer_seller_demand, condition == "baseline")
View(baseline)
solids = bind_rows(mutate(baseline, condition = "baseline"),
mutate(baseline, condition = "increase"),
mutate(baseline, condition = "decrease"))
View(solids)
# FOR SHOWING CHANGES FROM BASELINE AS DASHED LINES IN 2ND AND 3RD ROWS
baseline = filter(buyer_seller_demand, condition == "baseline")
solids = bind_rows(mutate(baseline, condition = "baseline", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "increase", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "decrease", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "baseline", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(baseline, condition = "increase", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(baseline, condition = "decrease", column = "Seller", Q_buyer = NA, Q_joint = NA))
# FOR SHOWING CHANGES FROM BASELINE AS DASHED LINES IN 2ND AND 3RD ROWS
baseline = filter(buyer_seller_demand, condition == "baseline")
solids = bind_rows(mutate(baseline, condition = "baseline", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "increase", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "decrease", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "baseline", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(baseline, condition = "increase", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(baseline, condition = "decrease", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"))
jpeg(here("Plots", "Figure 2 (alt) - Paneled Demand Curve.jpeg"),
width = 14.6, height = 12, units = "cm", res = 300)
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
mutate(x_int = case_when(condition == "baseline" ~ log10(calculate_price(.0025)),
condition == "increase" ~ log10(calculate_price(.000375)),
condition == "decrease" ~ log10(calculate_price(.015))),
x_int = case_when(column == "Buyer" ~ NA, T ~ x_int)) %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "dashed") +
geom_line(aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "dashed") +
geom_line(data = solids, aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "solid") +
geom_line(data = solids, aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "solid") +
geom_line(data = solids, aes(y = Q_joint, color = "c"), linewidth = .75, linetype = "solid") +
geom_vline(aes(xintercept = x_int),
linetype = "dotted", linewidth = .75) +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.10, 5, 250)),
labels = c("$.10", "$5", "$250")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.125),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_blank(),
axis.text.y       = element_text(size = 10, color = "black"),
axis.line         = element_line(linewidth = .75),
axis.ticks        = element_line(linewidth = .75, color = "black"),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(1, "cm"),
plot.margin       = unit(c(1.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
# FOR SHOWING CHANGES FROM BASELINE AS DASHED LINES IN 2ND AND 3RD ROWS
baseline = filter(buyer_seller_demand, condition == "baseline")
solids = bind_rows(mutate(baseline, condition = "baseline", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "increase", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "decrease", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "baseline", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(baseline, condition = "increase", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(baseline, condition = "decrease", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"))
jpeg(here("Plots", "Figure 2 (alt) - Paneled Demand Curve.jpeg"),
width = 14.6, height = 12, units = "cm", res = 300)
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
mutate(x_int = case_when(condition == "baseline" ~ log10(calculate_price(.0025)),
condition == "increase" ~ log10(calculate_price(.000375)),
condition == "decrease" ~ log10(calculate_price(.015))),
x_int = case_when(column == "Buyer" ~ NA, T ~ x_int)) %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "dashed") +
geom_line(aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "dashed") +
geom_line(data = solids, aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "solid") +
geom_line(data = solids, aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "solid") +
geom_line(data = solids, aes(y = Q_joint, color = "c"), linewidth = .75, linetype = "solid") +
# geom_vline(aes(xintercept = x_int),
#            linetype = "dotted", linewidth = .75) +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.10, 5, 250)),
labels = c("$.10", "$5", "$250")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.125),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_blank(),
axis.text.y       = element_text(size = 10, color = "black"),
axis.line         = element_line(linewidth = .75),
axis.ticks        = element_line(linewidth = .75, color = "black"),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(1, "cm"),
plot.margin       = unit(c(1.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
# FOR SHOWING CHANGES FROM BASELINE AS DASHED LINES IN 2ND AND 3RD ROWS
baseline = filter(buyer_seller_demand, condition == "baseline")
solids = bind_rows(mutate(baseline, condition = "baseline", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "increase", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "decrease", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "baseline", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(baseline, condition = "increase", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(baseline, condition = "decrease", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"))
jpeg(here("Plots", "Figure 2 (alt) - Paneled Demand Curve.jpeg"),
width = 14.6, height = 12, units = "cm", res = 300)
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint", Q_buyer = NA, Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
mutate(x_int = case_when(condition == "baseline" ~ log10(calculate_price(.0025)),
condition == "increase" ~ log10(calculate_price(.000375)),
condition == "decrease" ~ log10(calculate_price(.015))),
x_int = case_when(column == "Buyer" ~ NA, T ~ x_int)) %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "dashed") +
geom_line(aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "dashed") +
geom_line(data = solids, aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "solid") +
geom_line(data = solids, aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "solid") +
geom_line(data = solids, aes(y = Q_joint, color = "c"), linewidth = .75, linetype = "solid") +
# geom_vline(aes(xintercept = x_int),
#            linetype = "dotted", linewidth = .75) +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.10, 5, 250)),
labels = c("$.10", "$5", "$250")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.125),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_blank(),
axis.text.y       = element_text(size = 10, color = "black"),
axis.line         = element_line(linewidth = .75),
axis.ticks        = element_line(linewidth = .75, color = "black"),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(1, "cm"),
plot.margin       = unit(c(1.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
# FOR SHOWING CHANGES FROM BASELINE AS DASHED LINES IN 2ND AND 3RD ROWS
baseline = filter(buyer_seller_demand, condition == "baseline")
solids = bind_rows(mutate(baseline, condition = "baseline", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "increase", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "decrease", column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(baseline, condition = "baseline", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(baseline, condition = "increase", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(baseline, condition = "decrease", column = "Seller", Q_buyer = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint"))
jpeg(here("Plots", "Figure 2 (alt) - Paneled Demand Curve.jpeg"),
width = 14.6, height = 12, units = "cm", res = 300)
bind_rows(mutate(buyer_seller_demand, column = "Buyer", Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Joint", Q_buyer = NA, Q_seller = NA, Q_joint = NA),
mutate(buyer_seller_demand, column = "Seller", Q_buyer = NA, Q_joint = NA)) %>%
mutate(x_int = case_when(condition == "baseline" ~ log10(calculate_price(.0025)),
condition == "increase" ~ log10(calculate_price(.000375)),
condition == "decrease" ~ log10(calculate_price(.015))),
x_int = case_when(column == "Buyer" ~ NA, T ~ x_int)) %>%
ggplot(aes(x = log_price)) +
# ADD GEOMS
geom_line(aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "dashed") +
geom_line(aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "dashed") +
geom_line(data = solids, aes(y = Q_buyer, color = "a"), linewidth = .75, linetype = "solid") +
geom_line(data = solids, aes(y = Q_seller, color = "b"), linewidth = .75, linetype = "solid") +
geom_line(data = solids, aes(y = Q_joint, color = "c"), linewidth = .75, linetype = "solid") +
geom_vline(aes(xintercept = x_int),
linetype = "dotted", linewidth = .75) +
# ADD SCALES
scale_x_continuous(expand = c(0, 0), limits = c(log10(price_ranges[1]), log10(price_ranges[2])),
breaks = log10(c(.10, 5, 250)),
labels = c("$.10", "$5", "$250")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0", "50%", "100%")) +
scale_color_manual("agent", values = c("a" = "black", "b" = "gray55", "c" = "red3"),
labels = c("Buy", "Sell", "Transaction")) +
# ADD THEMES
labs(x = "Price/Commodity", y = "Probability") +
theme_classic() +
theme(legend.position   = c(.5, 1.125),
legend.direction  = "horizontal",
legend.title      = element_blank(),
legend.background = element_rect(fill = "transparent", color = "transparent"),
axis.text.x       = element_blank(),
axis.text.y       = element_text(size = 10, color = "black"),
axis.line         = element_line(linewidth = .75),
axis.ticks        = element_line(linewidth = .75, color = "black"),
strip.text        = element_blank(),
panel.spacing.x   = unit(.5, "cm"),
panel.spacing.y   = unit(1, "cm"),
plot.margin       = unit(c(1.75, .5, .05, .05), "cm")) +
coord_cartesian(clip = "off") +
facet_rep_grid(condition~column)
dev.off()
